// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=outDMux0, b=outDMux1, c=outDMux2, d=outDMux3, e=outDMux4, f=outDMux5, g=outDMux6, h=outDMux7);
    RAM64(in=in, load=outDMux0, address=address[3..8], out=outRam0);
    RAM64(in=in, load=outDMux1, address=address[3..8], out=outRam1);
    RAM64(in=in, load=outDMux2, address=address[3..8], out=outRam2);
    RAM64(in=in, load=outDMux3, address=address[3..8], out=outRam3);
    RAM64(in=in, load=outDMux4, address=address[3..8], out=outRam4);
    RAM64(in=in, load=outDMux5, address=address[3..8], out=outRam5);
    RAM64(in=in, load=outDMux6, address=address[3..8], out=outRam6);
    RAM64(in=in, load=outDMux7, address=address[3..8], out=outRam7);
    Mux8Way16(a=outRam0 ,b=outRam1 ,c=outRam2 ,d=outRam3 ,e=outRam4 ,f=outRam5 ,g=outRam6 ,h=outRam7 ,sel=address[0..2] ,out=out);
}